[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pclink"
version = "2.2.0"  # Fresh start version
description = "Cross-platform desktop app for secure remote PC control and management, featuring a lightweight built-in WebUI and API for local or remote access."
readme = "README.md"
license = "AGPL-3.0-or-later"
authors = [
    {name = "AZHAR ZOUHIR", email = "azhar@bytedz.xyz"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
requires-python = ">=3.8"
dependencies = [
    "fastapi>=0.95.0",
    "uvicorn[standard]>=0.22.0",
    "websockets>=12.0",
    "wsproto>=1.2.0",
    "psutil>=5.9.0",
    "pyperclip>=1.8.2",
    "mss>=9.0.0",
    "keyboard>=0.13.5",
    "Pillow>=10.0.0",
    "requests>=2.31.0",
    "cryptography>=41.0.0",
    "getmac>=0.9.0",
    "qrcode>=7.4.0",
    "pyautogui>=0.9.54",
    "pynput>=1.7.6",
    "packaging>=21.0",
    "pywin32>=306; sys_platform == 'win32'",
    "pystray>=0.19.0",
]

[project.scripts]
pclink = "pclink.main:main"
pclink-web = "pclink_web:main"

[project.urls]
Homepage = "https://github.com/BYTEDz/PCLink"
Repository = "https://github.com/BYTEDz/PCLink"
Issues = "https://github.com/BYTEDz/PCLink/issues"

[project.optional-dependencies]
dev = [
    "pytest>=7.3.1",
    "pytest-cov>=4.1.0",
    "black>=23.3.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.3.0",
    "pyinstaller>=5.13.0",
    "pre-commit>=2.0",
    "build",
    "svglib>=1.5.1",
    "reportlab>=4.0.0",
]

[tool.setuptools]
include-package-data = true  # <-- ADD THIS LINE

[tool.setuptools.packages.find]
where = ["src"]
include = ["pclink*"]

[tool.setuptools.package-data]
pclink = ["assets/**/*", "web_ui/static/**/*"] # <-- UPDATED TO BE RECURSIVE

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_gitignore = true
skip = [".git", ".hg", ".mypy_cache", ".tox", ".venv", "_build", "buck-out", "build", "dist"]

[tool.flake8]
max-line-length = 88
extend-ignore = "E203"
exclude = [".git", ".hg", ".mypy_cache", ".tox", ".venv", "_build", "buck-out", "build", "dist"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"